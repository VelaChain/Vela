syntax = "proto3";
package VelaChain.vela.market;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "market/params.proto";
import "market/pool.proto";
import "market/liq_prov.proto";
import "market/fee_map.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/VelaChain/vela/x/market/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/VelaChain/vela/market/params";
  }
  // Queries a Pool by index.
	rpc Pool(QueryGetPoolRequest) returns (QueryGetPoolResponse) {
		option (google.api.http).get = "/VelaChain/vela/market/pool/{denomA}/{denomB}";
	}

	// Queries a list of Pool items.
	rpc PoolAll(QueryAllPoolRequest) returns (QueryAllPoolResponse) {
		option (google.api.http).get = "/VelaChain/vela/market/pool";
	}

// Queries a LiqProv by index.
	rpc LiqProv(QueryGetLiqProvRequest) returns (QueryGetLiqProvResponse) {
		option (google.api.http).get = "/VelaChain/vela/market/liq_prov/{poolName}/{address}";
	}

	// Queries a list of LiqProv items.
	rpc LiqProvAll(QueryAllLiqProvRequest) returns (QueryAllLiqProvResponse) {
		option (google.api.http).get = "/VelaChain/vela/market/liq_prov";
	}

// Queries a FeeMap by index.
	rpc FeeMap(QueryGetFeeMapRequest) returns (QueryGetFeeMapResponse) {
		option (google.api.http).get = "/VelaChain/vela/market/fee_map/{poolName}";
	}

	// Queries a list of FeeMap items.
	rpc FeeMapAll(QueryAllFeeMapRequest) returns (QueryAllFeeMapResponse) {
		option (google.api.http).get = "/VelaChain/vela/market/fee_map";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetPoolRequest {
	  string denomA = 1;
  string denomB = 2;

}

message QueryGetPoolResponse {
	Pool pool = 1 [(gogoproto.nullable) = false];
}

message QueryAllPoolRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPoolResponse {
	repeated Pool pool = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetLiqProvRequest {
	  string poolName = 1;
  string address = 2;

}

message QueryGetLiqProvResponse {
	LiqProv liqProv = 1 [(gogoproto.nullable) = false];
}

message QueryAllLiqProvRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllLiqProvResponse {
	repeated LiqProv liqProv = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetFeeMapRequest {
	  string poolName = 1;

}

message QueryGetFeeMapResponse {
	FeeMap feeMap = 1 [(gogoproto.nullable) = false];
}

message QueryAllFeeMapRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllFeeMapResponse {
	repeated FeeMap feeMap = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
